- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC variables
      include_vars: vars/vpc_setup
    
    - name: Create profile vpc
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_hostnames: yes
        dns_support: yes
        tenancy: default
        state: "{{state}}"
      register: vpc_out
    
    - debug: 
        var: vpc_out
    
    - name: Create Public subnet 1 in Zone 1
      ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpc_out.vpc.id}}"
        cidr: "{{PubSub1Cidr}}"
        region: "{{region}}"
        az: "{{zone1}}"
        map_public: yes
        tags:
          Name: PubSub1
      register: PubSub1_out
    
    - name: Create Public subnet 2 in Zone 2
      ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpc_out.vpc.id}}"
        cidr: "{{PubSub2Cidr}}"
        region: "{{region}}"
        az: "{{zone2}}"
        map_public: yes
        tags:
          Name: PubSub2
      register: PubSub2_out

    - name: Create Public subnet 3 in Zone 3
      ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpc_out.vpc.id}}"
        cidr: "{{PubSub3Cidr}}"
        region: "{{region}}"
        az: "{{zone3}}"
        map_public: yes
        tags:
          Name: PubSub3
      register: PubSub3_out
    
    - name: Create Private subnet 1 in Zone 1
      ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpc_out.vpc.id}}"
        cidr: "{{PrivSub1Cidr}}"
        region: "{{region}}"
        az: "{{zone1}}"
        tags:
          Name: PrivateSub1
      register: PrivateSub1_out

    - name: Create Private subnet 2 in Zone 2
      ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpc_out.vpc.id}}"
        cidr: "{{PrivSub2Cidr}}"
        region: "{{region}}"
        az: "{{zone2}}"
        tags:
          Name: PrivateSub2
      register: PrivateSub2_out

    - name: Create Private subnet 3 in Zone 3
      ec2_vpc_subnet:
        state: "{{state}}"
        vpc_id: "{{vpc_out.vpc.id}}"
        cidr: "{{PrivSub3Cidr}}"
        region: "{{region}}"
        az: "{{zone3}}"
        tags:
          Name: PrivateSub3
      register: PrivateSub3_out

    - name: Create IGW for VPC
      ec2_vpc_igw:
        vpc_id: "{{vpc_out.vpc.id}}"
        state: "{{state}}"
        region: "{{region}}"
        tags:
            Name: ansible-IGW
      register: igw_out

    - debug: 
        var: igw_out

    - name: Create Route Table for Public subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        tags:
          Name: PubRouteTable_ansible
        subnets:
          - "{{PubSub1_out.subnet.id}}"
          - "{{PubSub2_out.subnet.id}}"
          - "{{PubSub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_out.gateway_id}}"
      register: PubRouteTable_ansible_out

    - name: Create NAT gateway for private subnets
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{PubSub1_out.subnet.id}}"
        wait: yes
        if_exist_do_not_create: yes
        region: "{{region}}"
      register: nat_gateway_ansible_out

    - name: Create Route Table for Private subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpc_out.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        tags:
          Name: PrivateRouteTable_ansible
        subnets:
          - "{{PrivateSub1_out.subnet.id}}"
          - "{{PrivateSub2_out.subnet.id}}"
          - "{{PrivateSub3_out.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{nat_gateway_ansible_out.nat_gateway_id}}"
      register: PrivateRouteTable_ansible_out

    - debug: 
        var: {{item}}
      loop: 
        - vpc_out.vpc.id
        - PubSub1_out.subnet.id
        - PubSub2_out.subnet.id
        - PubSub3_out.subnet.id
        - PrivateSub1_out.subnet.id
        - PrivateSub2_out.subnet.id
        - PrivateSub3_out.subnet.id
        - PubRouteTable_ansible_out.route_table.id
        - PrivateRouteTable_ansible_out.route_table.id
        - igw_out.gateway_id
        - nat_gateway_ansible_out.nat_gateway_id

    - set_fact: 
        vpcid: "{{vpc_out.vpc.id}}"
        pubsub1id: "{{PubSub1_out.subnet.id}}"
        pubsub2id: "{{PubSub2_out.subnet.id}}"
        pubsub3id: "{{PubSub3_out.subnet.id}}"
        privatesub1id: "{{PrivateSub1_out.subnet.id}}"
        privatesub2id: "{{PrivateSub2_out.subnet.id}}"
        privatesub3id: "{{PrivateSub3_out.subnet.id}}"
        igwid: "{{igw_out.gateway_id}}"
        pubRTid: "{{PubRouteTable_ansible_out.route_table.id}}"
        NATGWid: "{{nat_gateway_ansible_out.nat_gateway_id}}"
        privateRTid: "{{PrivateRouteTable_ansible_out.route_table.id}}"

    - name: Copy values to a file.
      copy: 
        content: "vpcid: {{vpc_out.vpc.id}}\npubsub1id: {{PubSub1_out.subnet.id}}\npubsub2id: {{PubSub2_out.subnet.id}}\npubsub3id: {{PubSub3_out.subnet.id}}\nprivatesub1id: {{PrivateSub1_out.subnet.id}}\nprivatesub2id: {{PrivateSub2_out.subnet.id}}\nprivatesub3id: {{PrivateSub3_out.subnet.id}}\nigwid: {{igw_out.gateway_id}}\npubRTid: {{PubRouteTable_ansible_out.route_table.id}}\nNATGWid: {{nat_gateway_ansible_out.nat_gateway_id}}\nprivateRTid: {{PrivateRouteTable_ansible_out.route_table.id}}"





